<<<<<<< Updated upstream
students <-read.csv("C:/Users/Axiel/OneDrive/Intelligent Data Analysis/student-mat.csv", sep=";")
sd(x=students$G3)
range(students$G3)
max(students$G3) - min(students$G3)
var(students$G3)
install.packages(“moments”)
library(moments)
install.packages(“moments")"
install.packages("moments")
library(moments)
kurtosis(students$G3)
skewness(students$G3)
barplot(table(students$G3), main="Car Distribution",
xlab="Number of Gears")
barplot(table(students$G3), main="G3 Distribution",
xlab="G3")
ggplot(data=students$G3, aes(x=time, y=total_bill, group=1)) +
geom_line()
plot(data=students$G3, aes(x=time, y=total_bill, group=1)) +
geom_line()
plot(students$G3, table(students$G3), type = "b", frame = FALSE, pch = 19,
col = "red", xlab = "x", ylab = "y")
students <-read.csv("C:/Users/Axiel/OneDrive/Intelligent Data Analysis/student-mat.csv", sep=";")
prcomp(students, scale = FALSE)
stud
students
prcomp(students, scale = TRUE)
pca <- prcomp(students, scale = TRUE)
library(readr)
train_data_cleaning <- read_csv("Master - MUII/1º año/1º Cuatrimestre/Intelligent Systems/_Project/train_data_cleaning.csv")
View(train_data_cleaning)
install.packages(c("dplyr", "gutenbergr", "stringr", "tidytext", "tidyr",
"stopwords", "wordcloud", "rsample", "glmnet",
"doMC", "forcats", "broom", "igraph", "ggraph"))
library(dplyr)
tweets <- as_tibble(train_data_cleaning) %>%
mutate(tweet = train_data_cleaning$id %>%
select(-location())
)
tweets <- as_tibble(train_data_cleaning) %>%
mutate(tweet = train_data_cleaning$id %>%
select(-location)
)
tweets <- as_tibble(train_data_cleaning) %>%
mutate(tweet = id) %>%
select(-location)
View(tweets)
View(train_data_cleaning)
View(tweets)
View(train_data_cleaning)
View(train_data_cleaning)
View(tweets)
library(dplyr)
library(tidytext)
tidy_tweets <- train_data_cleaning %>%
unnest_tokens(word, text) %>%
group_by(word) %>%
filter(n() > 10) %>%
ungroup()
View(tweets)
View(tidy_tweets)
tweets <- as_tibble(train_data_cleaning) %>%
mutate(tweet = id) %>%
select(-location, -id, -keyword)
View(tweets)
tidy_tweets <- tweets %>%
unnest_tokens(word, text) %>%
group_by(word) %>%
filter(n() > 10) %>%
ungroup()
View(tidy_tweets)
library(stopwords)
library(dplyr)
library(tibble)
library(stopwords)
library(dplyr)
library(tibble)
stopword <- as_tibble(stopwords::stopwords("en"))
stopword <- rename(stopword, word=value)
tb <- anti_join(tidy_tweets, stopword, by = 'word')
word_count <- count(tb, word, sort=TRUE)
View(word_count)
library(dplyr)
View(tweets)
target_count <-  tb %>% count(target, word, sort = TRUE)
View(target_count)
cv.glmnet()
cv.glmnet().
library(glmnet)
library(doMC)
install.packages("doMC")
library(doMC)
install.packages("doMC", repos="http://R-Forge.R-project.org")
library(doMC)
registerDoMC(cores = 8)
is_fake <- train_data_cleaning$target == 0
pkg = c("shiny")
=======
left_join(. , data, by=c("id"="depcom"))
# Make the merge
spdf_fortified = spdf_fortified %>%
left_join(. , dataNEw, by=c("id"="depcom"))
# Note that if the number of restaurant is NA, it is in fact 0
spdf_fortified$nb_equip[ is.na(spdf_fortified$nb_equip)] = 0.001
ggplot() +
geom_polygon(data = spdf_fortified, aes(fill = nb_equip, x = long, y = lat, group = group)) +
theme_void() +
coord_map()
ggplot() +
geom_polygon(data = spdf_fortified, aes(fill = nb_equip, x = long, y = lat, group = group)) +
theme_void() +
coord_map()
View(data)
View(data)
# Make the merge
head(data)
aggregate(Count ~ City, data, sum)
ciudades <- aggregate(Count ~ City, data, sum)
california_fortified = california_fortified %>%
left_join(. , ciudades, by=c("id"="City"))
# Note that if the number of restaurant is NA, it is in fact 0
california_fortified$Count[ is.na(california_fortified$Count)] = 0.001
california_fortified = california_fortified %>%
left_join(. , ciudades, by=c("id"="City"))
# Note that if the number of restaurant is NA, it is in fact 0
california_fortified$Count[ is.na(california_fortified$Count)] = 0.001
ggplot() +
geom_polygon(data = california_fortified, aes(fill = Count, x = long, y = lat, group = group)) +
theme_void() +
coord_map()
ggplot() +
geom_polygon(data = california_fortified, aes(fill = Count, x = long, y = lat, group = group)) +
theme_void() +
coord_map()
library(viridis)
pkg = c("tidyverse","dplyr","ggplot2","readxl","maps", "mapproj", "shiny","geojsonio","broom","geojsonR","viridis")
## If not installed, install and load all packages
package.check <- lapply(
pkg,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
p <- ggplot() +
geom_polygon(data = spdf_fortified, aes(fill = nb_equip, x = long, y = lat, group = group) , size=0, alpha=0.9) +
theme_void() +
scale_fill_viridis(trans = "log", breaks=c(1,5,10,20,50,100), name="Number of restaurant", guide = guide_legend( keyheight = unit(3, units = "mm"), keywidth=unit(12, units = "mm"), label.position = "bottom", title.position = 'top', nrow=1) ) +
labs(
title = "South of France Restaurant concentration",
subtitle = "Number of restaurant per city district",
caption = "Data: INSEE | Creation: Yan Holtz | r-graph-gallery.com"
) +
theme(
text = element_text(color = "#22211d"),
plot.background = element_rect(fill = "#f5f5f2", color = NA),
panel.background = element_rect(fill = "#f5f5f2", color = NA),
legend.background = element_rect(fill = "#f5f5f2", color = NA),
plot.title = element_text(size= 22, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.4, l = 2, unit = "cm")),
plot.subtitle = element_text(size= 17, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.43, l = 2, unit = "cm")),
plot.caption = element_text( size=12, color = "#4e4d47", margin = margin(b = 0.3, r=-99, unit = "cm") ),
legend.position = c(0.7, 0.09)
) +
coord_map()
p
p <- ggplot() +
geom_polygon(data = spdf_fortified, aes(fill = nb_equip, x = long, y = lat, group = group) , size=0, alpha=0.9) +
theme_void() +
scale_fill_viridis(trans = "log", breaks=c(1,5,10,20,50,100), name="Number of restaurant", guide = guide_legend( keyheight = unit(3, units = "mm"), keywidth=unit(12, units = "mm"), label.position = "bottom", title.position = 'top', nrow=1) ) +
labs(
title = "California",
subtitle = "Número de bajas por ciudad",
caption = "Data: INSEE | Creation: Yan Holtz | r-graph-gallery.com"
) +
theme(
text = element_text(color = "#22211d"),
plot.background = element_rect(fill = "#f5f5f2", color = NA),
panel.background = element_rect(fill = "#f5f5f2", color = NA),
legend.background = element_rect(fill = "#f5f5f2", color = NA),
plot.title = element_text(size= 22, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.4, l = 2, unit = "cm")),
plot.subtitle = element_text(size= 17, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.43, l = 2, unit = "cm")),
plot.caption = element_text( size=12, color = "#4e4d47", margin = margin(b = 0.3, r=-99, unit = "cm") ),
legend.position = c(0.7, 0.09)
) +
coord_map()
p
p <- ggplot() +
geom_polygon(data = california_fortified, aes(fill = Count, x = long, y = lat, group = group) , size=0, alpha=0.9) +
theme_void() +
scale_fill_viridis(trans = "log", breaks=c(1,5,10,20,50,100), name="Número de bajas", guide = guide_legend( keyheight = unit(3, units = "mm"), keywidth=unit(12, units = "mm"), label.position = "bottom", title.position = 'top', nrow=1) ) +
labs(
title = "California",
subtitle = "Número de bajas por ciudad",
caption = "Data: INSEE | Creation: Yan Holtz | r-graph-gallery.com"
) +
theme(
text = element_text(color = "#22211d"),
plot.background = element_rect(fill = "#f5f5f2", color = NA),
panel.background = element_rect(fill = "#f5f5f2", color = NA),
legend.background = element_rect(fill = "#f5f5f2", color = NA),
plot.title = element_text(size= 22, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.4, l = 2, unit = "cm")),
plot.subtitle = element_text(size= 17, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.43, l = 2, unit = "cm")),
plot.caption = element_text( size=12, color = "#4e4d47", margin = margin(b = 0.3, r=-99, unit = "cm") ),
legend.position = c(0.7, 0.09)
) +
coord_map()
p
p <- ggplot() +
geom_polygon(data = california_fortified, aes(fill = Count, x = long, y = lat, group = group) , size=0, alpha=0.9) +
theme_void() +
scale_fill_viridis(trans = "log", breaks=c(0,2,5,10,20,50,100), name="Número de bajas", guide = guide_legend( keyheight = unit(3, units = "mm"), keywidth=unit(12, units = "mm"), label.position = "bottom", title.position = 'top', nrow=1) ) +
labs(
title = "California",
subtitle = "Número de bajas por ciudad",
caption = "Data: INSEE | Creation: Yan Holtz | r-graph-gallery.com"
) +
theme(
text = element_text(color = "#22211d"),
plot.background = element_rect(fill = "#f5f5f2", color = NA),
panel.background = element_rect(fill = "#f5f5f2", color = NA),
legend.background = element_rect(fill = "#f5f5f2", color = NA),
plot.title = element_text(size= 22, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.4, l = 2, unit = "cm")),
plot.subtitle = element_text(size= 17, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.43, l = 2, unit = "cm")),
plot.caption = element_text( size=12, color = "#4e4d47", margin = margin(b = 0.3, r=-99, unit = "cm") ),
legend.position = c(0.7, 0.09)
) +
coord_map()
p
p <- ggplot() +
geom_polygon(data = california_fortified, aes(fill = Count, x = long, y = lat, group = group) , size=0, alpha=0.9) +
theme_void() +
scale_fill_viridis(trans = "log", breaks=c(0,1,2,5,10,20,50,100), name="Número de bajas", guide = guide_legend( keyheight = unit(3, units = "mm"), keywidth=unit(12, units = "mm"), label.position = "bottom", title.position = 'top', nrow=1) ) +
labs(
title = "California",
subtitle = "Número de bajas por ciudad",
caption = "Data: INSEE | Creation: Yan Holtz | r-graph-gallery.com"
) +
theme(
text = element_text(color = "#22211d"),
plot.background = element_rect(fill = "#f5f5f2", color = NA),
panel.background = element_rect(fill = "#f5f5f2", color = NA),
legend.background = element_rect(fill = "#f5f5f2", color = NA),
plot.title = element_text(size= 22, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.4, l = 2, unit = "cm")),
plot.subtitle = element_text(size= 17, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.43, l = 2, unit = "cm")),
plot.caption = element_text( size=12, color = "#4e4d47", margin = margin(b = 0.3, r=-99, unit = "cm") ),
legend.position = c(0.7, 0.09)
) +
coord_map()
p
p <- ggplot() +
geom_polygon(data = california_fortified, aes(fill = Count, x = long, y = lat, group = group) , size=0, alpha=0.9) +
theme_void() +
scale_fill_viridis(trans = "log", breaks=c(0,1,2,5,10,20,50,100), name="Número de bajas", guide = guide_legend( keyheight = unit(3, units = "mm"), keywidth=unit(12, units = "mm"), label.position = "bottom", title.position = 'top', nrow=1) ) +
labs(
title = "California",
subtitle = "Número de bajas por ciudad",
caption = "Data: INSEE | Creation: Yan Holtz | r-graph-gallery.com"
) +
theme(
text = element_text(color = "#22211d"),
plot.background = element_rect(fill = "#f5f5f2", color = NA),
panel.background = element_rect(fill = "#f5f5f2", color = NA),
legend.background = element_rect(fill = "#f5f5f2", color = NA),
plot.title = element_text(size= 22, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.4, l = 2, unit = "cm")),
plot.subtitle = element_text(size= 17, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.43, l = 2, unit = "cm")),
plot.caption = element_text( size=12, color = "#4e4d47", margin = margin(b = 0.3, r=-99, unit = "cm") ),
legend.position = c(0.7, 0.09)
) +
coord_map()
p
p <- ggplot() +
geom_polygon(data = california_fortified, aes(fill = Count, x = long, y = lat, group = group) , size=0, alpha=0.9) +
theme_void() +
scale_fill_viridis(trans = "log", breaks=c(0,5,10,20,50,100,200), name="Número de bajas", guide = guide_legend( keyheight = unit(3, units = "mm"), keywidth=unit(12, units = "mm"), label.position = "bottom", title.position = 'top', nrow=1) ) +
labs(
title = "California",
subtitle = "Número de bajas por ciudad",
caption = "Data: INSEE | Creation: Yan Holtz | r-graph-gallery.com"
) +
theme(
text = element_text(color = "#22211d"),
plot.background = element_rect(fill = "#f5f5f2", color = NA),
panel.background = element_rect(fill = "#f5f5f2", color = NA),
legend.background = element_rect(fill = "#f5f5f2", color = NA),
plot.title = element_text(size= 22, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.4, l = 2, unit = "cm")),
plot.subtitle = element_text(size= 17, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.43, l = 2, unit = "cm")),
plot.caption = element_text( size=12, color = "#4e4d47", margin = margin(b = 0.3, r=-99, unit = "cm") ),
legend.position = c(0.7, 0.09)
) +
coord_map()
p
p <- ggplot() +
geom_polygon(data = california_fortified, aes(fill = Count, x = long, y = lat, group = group) , size=0, alpha=0.9) +
theme_void() +
scale_fill_viridis(trans = "log", breaks=c(0,5,10,20,50,100,200), name="Número de bajas", guide = guide_legend( keyheight = unit(3, units = "mm"), keywidth=unit(12, units = "mm"), label.position = "bottom", title.position = 'top', nrow=1) ) +
labs(
title = "California",
subtitle = "Número de bajas por ciudad",
caption = "Data: INSEE | Creation: Yan Holtz | r-graph-gallery.com"
) +
theme(
text = element_text(color = "#22211d"),
plot.background = element_rect(fill = "#f5f5f2", color = NA),
panel.background = element_rect(fill = "#f5f5f2", color = NA),
legend.background = element_rect(fill = "#f5f5f2", color = NA),
plot.title = element_text(size= 22, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.4, l = 2, unit = "cm")),
plot.subtitle = element_text(size= 17, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.43, l = 2, unit = "cm")),
plot.caption = element_text( size=12, color = "#4e4d47", margin = margin(b = 0.3, r=-99, unit = "cm") ),
legend.position = c(0, 0.09)
) +
coord_map()
p
p <- ggplot() +
geom_polygon(data = california_fortified, aes(fill = Count, x = long, y = lat, group = group) , size=0, alpha=0.9) +
theme_void() +
scale_fill_viridis(trans = "log", breaks=c(0,5,10,20,50,100,200), name="Número de bajas", guide = guide_legend( keyheight = unit(3, units = "mm"), keywidth=unit(12, units = "mm"), label.position = "bottom", title.position = 'top', nrow=1) ) +
labs(
title = "California",
subtitle = "Número de bajas por ciudad",
caption = "Data: INSEE | Creation: Yan Holtz | r-graph-gallery.com"
) +
theme(
text = element_text(color = "#22211d"),
plot.background = element_rect(fill = "#f5f5f2", color = NA),
panel.background = element_rect(fill = "#f5f5f2", color = NA),
legend.background = element_rect(fill = "#f5f5f2", color = NA),
plot.title = element_text(size= 22, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.4, l = 2, unit = "cm")),
plot.subtitle = element_text(size= 17, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.43, l = 2, unit = "cm")),
plot.caption = element_text( size=12, color = "#4e4d47", margin = margin(b = 0.3, r=-99, unit = "cm") ),
legend.position = c(0.2, 0.09)
) +
coord_map()
p
p
p <- ggplot() +
geom_polygon(data = california_fortified, aes(fill = Count, x = long, y = lat, group = group) , size=0, alpha=0.9) +
theme_void() +
scale_fill_viridis(trans = "log", breaks=c(0,5,10,20,50,100,200), name="Número de bajas", guide = guide_legend( keyheight = unit(3, units = "mm"), keywidth=unit(12, units = "mm"), label.position = "bottom", title.position = 'top', nrow=1) ) +
labs(
title = "California",
subtitle = "Número de bajas por ciudad",
caption = "Data: INSEE | Creation: Yan Holtz | r-graph-gallery.com"
) +
theme(
text = element_text(color = "#22211d"),
plot.background = element_rect(fill = "#f5f5f2", color = NA),
panel.background = element_rect(fill = "#f5f5f2", color = NA),
legend.background = element_rect(fill = "#f5f5f2", color = NA),
plot.title = element_text(size= 22, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.4, l = 2, unit = "cm")),
plot.subtitle = element_text(size= 17, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.43, l = 2, unit = "cm")),
plot.caption = element_text( size=12, color = "#4e4d47", margin = margin(b = 0.3, r=-99, unit = "cm") ),
legend.position = c(0.3, 0.09)
) +
coord_map()
p
p <- ggplot() +
geom_polygon(data = california_fortified, aes(fill = Count, x = long, y = lat, group = group) , size=0, alpha=0.9) +
theme_void() +
scale_fill_viridis(trans = "log", breaks=c(0,5,10,20,50,100,200), name="Número de bajas", guide = guide_legend( keyheight = unit(3, units = "mm"), keywidth=unit(12, units = "mm"), label.position = "bottom", title.position = 'top', nrow=1) ) +
labs(
title = "California",
subtitle = "Número de bajas por ciudad",
caption = "Data: INSEE | Creation: Yan Holtz | r-graph-gallery.com"
) +
theme(
text = element_text(color = "#22211d"),
plot.background = element_rect(fill = "#f5f5f2", color = NA),
panel.background = element_rect(fill = "#f5f5f2", color = NA),
legend.background = element_rect(fill = "#f5f5f2", color = NA),
plot.title = element_text(size= 22, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.4, l = 2, unit = "cm")),
plot.subtitle = element_text(size= 17, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.43, l = 2, unit = "cm")),
plot.caption = element_text( size=12, color = "#4e4d47", margin = margin(b = 0.3, r=-99, unit = "cm") ),
legend.position = c(1, 0.09)
) +
coord_map()
p
p <- ggplot() +
geom_polygon(data = california_fortified, aes(fill = Count, x = long, y = lat, group = group) , size=0, alpha=0.9) +
theme_void() +
scale_fill_viridis(trans = "log", breaks=c(0,5,10,20,50,100,200), name="Número de bajas", guide = guide_legend( keyheight = unit(3, units = "mm"), keywidth=unit(12, units = "mm"), label.position = "bottom", title.position = 'top', nrow=1) ) +
labs(
title = "California",
subtitle = "Número de bajas por ciudad",
caption = "Data: INSEE | Creation: Yan Holtz | r-graph-gallery.com"
) +
theme(
text = element_text(color = "#22211d"),
plot.background = element_rect(fill = "#f5f5f2", color = NA),
panel.background = element_rect(fill = "#f5f5f2", color = NA),
legend.background = element_rect(fill = "#f5f5f2", color = NA),
plot.title = element_text(size= 22, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.4, l = 2, unit = "cm")),
plot.subtitle = element_text(size= 17, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.43, l = 2, unit = "cm")),
plot.caption = element_text( size=12, color = "#4e4d47", margin = margin(b = 0.3, r=-99, unit = "cm") ),
legend.position = c(1, 0.09)
) +
coord_map()
p <- ggplot() +
geom_polygon(data = california_fortified, aes(fill = Count, x = long, y = lat, group = group) , size=0, alpha=0.9) +
theme_void() +
scale_fill_viridis(trans = "log", breaks=c(0,5,10,20,50,100,200), name="Número de bajas", guide = guide_legend( keyheight = unit(3, units = "mm"), keywidth=unit(12, units = "mm"), label.position = "bottom", title.position = 'top', nrow=1) ) +
labs(
title = "California",
subtitle = "Número de bajas por ciudad",
caption = "Data: INSEE | Creation: Yan Holtz | r-graph-gallery.com"
) +
theme(
text = element_text(color = "#22211d"),
plot.background = element_rect(fill = "#f5f5f2", color = NA),
panel.background = element_rect(fill = "#f5f5f2", color = NA),
legend.background = element_rect(fill = "#f5f5f2", color = NA),
plot.title = element_text(size= 22, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.4, l = 2, unit = "cm")),
plot.subtitle = element_text(size= 17, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.43, l = 2, unit = "cm")),
plot.caption = element_text( size=12, color = "#4e4d47", margin = margin(b = 0.3, r=-99, unit = "cm") ),
legend.position = c(1, 0.09)
) +
coord_map()
p <- ggplot() +
geom_polygon(data = california_fortified, aes(fill = Count, x = long, y = lat, group = group) , size=0, alpha=0.9) +
theme_void() +
scale_fill_viridis(trans = "log", breaks=c(0,5,10,20,50,100,200), name="Número de bajas", guide = guide_legend( keyheight = unit(3, units = "mm"), keywidth=unit(12, units = "mm"), label.position = "bottom", title.position = 'top', nrow=1) ) +
labs(
title = "California",
subtitle = "Número de bajas por ciudad",
caption = "Data: INSEE | Creation: Yan Holtz | r-graph-gallery.com"
) +
theme(
text = element_text(color = "#22211d"),
plot.background = element_rect(fill = "#f5f5f2", color = NA),
panel.background = element_rect(fill = "#f5f5f2", color = NA),
legend.background = element_rect(fill = "#f5f5f2", color = NA),
plot.title = element_text(size= 22, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.4, l = 2, unit = "cm")),
plot.subtitle = element_text(size= 17, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.43, l = 2, unit = "cm")),
plot.caption = element_text( size=12, color = "#4e4d47", margin = margin(b = 0.3, r=-99, unit = "cm") ),
legend.position = c(0.3, 0.09)
) +
coord_map()
p
pkg = c("tidyverse","dplyr","ggplot2","readxl","maps", "mapproj", "shiny","geojsonio","broom","geojsonR","viridis")
## If not installed, install and load all packages
>>>>>>> Stashed changes
package.check <- lapply(
pkg,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
<<<<<<< Updated upstream
ui <- fluidPage(
titlePanel("My Shiny App"),
sidebarLayout(
sidebarPanel(
h2("Installation"),
p("Shiny is available on CRAN, so you can install it in the usual way from your R console: ",
br(),
code(
span("install.packages(\"shiny\")", style = "color:red")
)
),
br(),
br(),
br(),
img(src = "rstudio.png", height = 60, width = 170),
p("Shiny is a product of ",
span("RStudio",style = "color")
)
),
mainPanel(
h1("Introducing Shiny"),
p("Shiny is a new package from RStudio that makes it",
em("indrecibly easy"),
"to buildinteractive web applications with R"
),
br(),
p("For an introduction and live examples, visit the ",
a(href="https://shiny.rstudio.com/","Shiny homepage")
),
br(),
h2("Features"),
p("- Build useful applications with only a few lines of code -no JavaScript requiered."),
p("- Shiny applications are automatically 'live' in the same way that",
strong("spreadsheets"),
"are live. Outputs change instantly as users modify inputs, without requiring a reload of the browser"
)
)
)
)
server <- function(input, output) {
}
server <- function(input, output) {
}
shinyApp(ui = ui, server = server)
setwd("C:/Users/Axiel/Documents/Master - MUII/dir_aux/shinyAppBigData")
pkg = c("tidyverse","dplyr","ggplot2","readxl","maps", "mapproj", "shiny")
package.check <- lapply(
pkg,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
data <- read_excel("data/Telco_customer_churn.xlsx")
source("helpers.r")
ggplot(churns %>% count(ChurnID, Contract) %>%    # Group by region and species, then count number in each group
mutate(pct=n/sum(n)),              # Calculate percent within each region
aes(ChurnID, n, fill=Contract)) +
geom_bar(stat="identity") +
geom_text(aes(label=paste0(sprintf("%1.1f", pct*100),"%")),
position=position_stack(vjust=0.5))
ggplot(churns %>% count(ChurnID, Contract) %>%    # Group by region and species, then count number in each group
mutate(pct=n/sum(n)),              # Calculate percent within each region
aes(ChurnID, n, fill=Contract)) +
geom_bar(stat="identity") +
geom_text(aes(label=paste0(sprintf("%1.1f", pct*100),"%")),
position=position_stack(vjust=0.5))
colnames(data) <- gsub(" ","",colnames(data))
aux <- distinct(data, ChurnReason)
colnames(data) <- gsub(" ","",colnames(data))
aux <- distinct(data, ChurnReason)
aux$ChurnID <- seq.int(nrow(aux))
aux <- aux[aux$ChurnID < 21, ]
data <- left_join(data, aux, by = "ChurnReason")
churns <- data[data$ChurnID < 21, ]
churns <- churns[!is.na(churns$Gender),]
churns <- churns[!is.na(churns$Contract),]
data2 <- data.frame(churns$ChurnID,churns$Contract,churns$ChurnID)
ggplot(churns, aes(fill=Gender, y=ChurnID, x=ChurnID)) +
geom_bar(position="stack", stat="identity")
ggplot(churns %>% count(ChurnID, Contract) %>%    # Group by region and species, then count number in each group
mutate(pct=n/sum(n)),              # Calculate percent within each region
aes(ChurnID, n, fill=Contract)) +
geom_bar(stat="identity") +
geom_text(aes(label=paste0(sprintf("%1.1f", pct*100),"%")),
position=position_stack(vjust=0.5))
=======
############################################################################
data <- read_excel("data/Telco_customer_churn.xlsx")
head(data)
source("ggplotMap")
source("ggplotMap.r")
url = "data/county_ca.geojson"
california <- geojson_read(url,  what = "sp")
california_fortified <- tidy(california, region = "NAME")
# Make the merge
head(data)
ciudades <- aggregate(Count ~ City, data, sum)
california_fortified = california_fortified %>%
left_join(. , ciudades, by=c("id"="City"))
# Note that if the number of restaurant is NA, it is in fact 0
california_fortified$Count[ is.na(california_fortified$Count)] = 0.001
p <- ggplotMap(california_fortified)
p
ggplotMap(california_fortified)
# Define UI ---
ui <- fluidPage(
)
# Define server logic ---
server <- function(input, output) {
}
# Run the App ---
shinyApp(ui = ui, server = server)
# Define UI ---
ui <- fluidPage(
titlePanel('Telco Churn Analysis'),
br(),
h3("3- Where are the customers churning?")
)
# Define server logic ---
server <- function(input, output) {
}
# Run the App ---
shinyApp(ui = ui, server = server)
# Data loading
data <- read_excel("data/Telco_customer_churn.xlsx")
url = "data/county_ca.geojson"
california <- geojson_read(url,  what = "sp")
# Preprocessing
california_fortified <- tidy(california, region = "NAME")
# Make the merge
head(data)
ciudades <- aggregate(Count ~ City, data, sum)
california_fortified = california_fortified %>%
left_join(. , ciudades, by=c("id"="City"))
# Note that if the number of restaurant is NA, it is in fact 0
california_fortified$Count[ is.na(california_fortified$Count)] = 0.001
# Define UI ---
ui <- fluidPage(
titlePanel('Telco Churn Analysis'),
br(),
h3("3- Where are the customers churning?"),
plotOutput("map")
)
# Define server logic ---
server <- function(input, output) {
output$map <- ggplotMap(california_fortified)
}
# Run the App ---
shinyApp(ui = ui, server = server)
# Define server logic ---
server <- function(input, output) {
output$map <- renderPlot({
do.call(ggplotMap, california_fortified)
})
}
# Run the App ---
shinyApp(ui = ui, server = server)
# Define server logic ---
server <- function(input, output) {
output$map <- renderPlot({
do.call(ggplotMap, california_fortified)
})
}
# Define server logic ---
server <- function(input, output) {
output$map <- renderPlot({
do.call(ggplotMap, california_fortified)
})
}
# Run the App ---
shinyApp(ui = ui, server = server)
# Define server logic ---
server <- function(input, output) {
output$map <- renderPlot({
ggplotMap(california_fortified)
})
}
# Run the App ---
shinyApp(ui = ui, server = server)
# Define UI ---
ui <- fluidPage(
titlePanel('Telco Churn Analysis'),
br(),
h3("3- Where are the customers churning?"),
plotOutput("map")
)
# Define server logic ---
server <- function(input, output) {
output$map <- renderPlot({
ggplotMap(california_fortified)
})
}
# Run the App ---
shinyApp(ui = ui, server = server)
# Define server logic ---
server <- function(input, output) {
output$map <- renderPlot({
ggplotMap(california_fortified)
})
}
# Run the App ---
shinyApp(ui = ui, server = server)
ggplotMap <- function(california_fortified) {
ggplot() +
geom_polygon(data = california_fortified, aes(fill = Count, x = long, y = lat, group = group) , size=0, alpha=0.9) +
theme_void() +
scale_fill_viridis(trans = "log", breaks=c(0,5,10,20,50,100,200), name="Número de bajas", guide = guide_legend( keyheight = unit(3, units = "mm"), keywidth=unit(12, units = "mm"), label.position = "bottom", title.position = 'top', nrow=1) ) +
labs(
title = "Aasdfad",
subtitle = "Número de bajas por ciudad",
caption = "Data: INSEE | Creation: Yan Holtz | r-graph-gallery.com"
) +
theme(
text = element_text(color = "#22211d"),
plot.background = element_rect(fill = "#f5f5f2", color = NA),
panel.background = element_rect(fill = "#f5f5f2", color = NA),
legend.background = element_rect(fill = "#f5f5f2", color = NA),
plot.title = element_text(size= 22, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.4, l = 2, unit = "cm")),
plot.subtitle = element_text(size= 17, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.43, l = 2, unit = "cm")),
plot.caption = element_text( size=12, color = "#4e4d47", margin = margin(b = 0.3, r=-99, unit = "cm") ),
legend.position = c(0.3, 0.09)
) +
coord_map()
}
# Define server logic ---
server <- function(input, output) {
output$map <- renderPlot({
ggplotMap(california_fortified)
})
}
# Run the App ---
shinyApp(ui = ui, server = server)
# Define server logic ---
server <- function(input, output) {
output$map <- renderPlot({
ggplotMap(california_fortified)
})
}
# Run the App ---
shinyApp(ui = ui, server = server)
runApp('Pregunta3.R')
runApp('Pregunta3.R')
runApp('Pregunta3.R')
source("ggplotMap.r", encoding="utf-8")
runApp('Pregunta3.R')
runApp('Pregunta3.R')
>>>>>>> Stashed changes
