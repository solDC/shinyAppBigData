students <-read.csv("C:/Users/Axiel/OneDrive/Intelligent Data Analysis/student-mat.csv", sep=";")
sd(x=students$G3)
range(students$G3)
max(students$G3) - min(students$G3)
var(students$G3)
install.packages(“moments”)
library(moments)
install.packages(“moments")"
install.packages("moments")
library(moments)
kurtosis(students$G3)
skewness(students$G3)
barplot(table(students$G3), main="Car Distribution",
xlab="Number of Gears")
barplot(table(students$G3), main="G3 Distribution",
xlab="G3")
ggplot(data=students$G3, aes(x=time, y=total_bill, group=1)) +
geom_line()
plot(data=students$G3, aes(x=time, y=total_bill, group=1)) +
geom_line()
plot(students$G3, table(students$G3), type = "b", frame = FALSE, pch = 19,
col = "red", xlab = "x", ylab = "y")
students <-read.csv("C:/Users/Axiel/OneDrive/Intelligent Data Analysis/student-mat.csv", sep=";")
prcomp(students, scale = FALSE)
stud
students
prcomp(students, scale = TRUE)
pca <- prcomp(students, scale = TRUE)
library(readr)
train_data_cleaning <- read_csv("Master - MUII/1º año/1º Cuatrimestre/Intelligent Systems/_Project/train_data_cleaning.csv")
View(train_data_cleaning)
install.packages(c("dplyr", "gutenbergr", "stringr", "tidytext", "tidyr",
"stopwords", "wordcloud", "rsample", "glmnet",
"doMC", "forcats", "broom", "igraph", "ggraph"))
library(dplyr)
tweets <- as_tibble(train_data_cleaning) %>%
mutate(tweet = train_data_cleaning$id %>%
select(-location())
)
tweets <- as_tibble(train_data_cleaning) %>%
mutate(tweet = train_data_cleaning$id %>%
select(-location)
)
tweets <- as_tibble(train_data_cleaning) %>%
mutate(tweet = id) %>%
select(-location)
View(tweets)
View(train_data_cleaning)
View(tweets)
View(train_data_cleaning)
View(train_data_cleaning)
View(tweets)
library(dplyr)
library(tidytext)
tidy_tweets <- train_data_cleaning %>%
unnest_tokens(word, text) %>%
group_by(word) %>%
filter(n() > 10) %>%
ungroup()
View(tweets)
View(tidy_tweets)
tweets <- as_tibble(train_data_cleaning) %>%
mutate(tweet = id) %>%
select(-location, -id, -keyword)
View(tweets)
tidy_tweets <- tweets %>%
unnest_tokens(word, text) %>%
group_by(word) %>%
filter(n() > 10) %>%
ungroup()
View(tidy_tweets)
library(stopwords)
library(dplyr)
library(tibble)
library(stopwords)
library(dplyr)
library(tibble)
stopword <- as_tibble(stopwords::stopwords("en"))
stopword <- rename(stopword, word=value)
tb <- anti_join(tidy_tweets, stopword, by = 'word')
word_count <- count(tb, word, sort=TRUE)
View(word_count)
library(dplyr)
View(tweets)
target_count <-  tb %>% count(target, word, sort = TRUE)
View(target_count)
cv.glmnet()
cv.glmnet().
library(glmnet)
library(doMC)
install.packages("doMC")
library(doMC)
install.packages("doMC", repos="http://R-Forge.R-project.org")
library(doMC)
registerDoMC(cores = 8)
is_fake <- train_data_cleaning$target == 0
pkg = c("shiny")
package.check <- lapply(
pkg,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
ui <- fluidPage(
titlePanel("My Shiny App"),
sidebarLayout(
sidebarPanel(
h2("Installation"),
p("Shiny is available on CRAN, so you can install it in the usual way from your R console: ",
br(),
code(
span("install.packages(\"shiny\")", style = "color:red")
)
),
br(),
br(),
br(),
img(src = "rstudio.png", height = 60, width = 170),
p("Shiny is a product of ",
span("RStudio",style = "color")
)
),
mainPanel(
h1("Introducing Shiny"),
p("Shiny is a new package from RStudio that makes it",
em("indrecibly easy"),
"to buildinteractive web applications with R"
),
br(),
p("For an introduction and live examples, visit the ",
a(href="https://shiny.rstudio.com/","Shiny homepage")
),
br(),
h2("Features"),
p("- Build useful applications with only a few lines of code -no JavaScript requiered."),
p("- Shiny applications are automatically 'live' in the same way that",
strong("spreadsheets"),
"are live. Outputs change instantly as users modify inputs, without requiring a reload of the browser"
)
)
)
)
server <- function(input, output) {
}
server <- function(input, output) {
}
shinyApp(ui = ui, server = server)
setwd("C:/Users/Axiel/Documents/Master - MUII/dir_aux/shinyAppBigData")
pkg = c("tidyverse","dplyr","ggplot2","readxl","maps", "mapproj", "shiny")
package.check <- lapply(
pkg,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
data <- read_excel("data/Telco_customer_churn.xlsx")
source("helpers.r")
ggplot(churns %>% count(ChurnID, Contract) %>%    # Group by region and species, then count number in each group
mutate(pct=n/sum(n)),              # Calculate percent within each region
aes(ChurnID, n, fill=Contract)) +
geom_bar(stat="identity") +
geom_text(aes(label=paste0(sprintf("%1.1f", pct*100),"%")),
position=position_stack(vjust=0.5))
ggplot(churns %>% count(ChurnID, Contract) %>%    # Group by region and species, then count number in each group
mutate(pct=n/sum(n)),              # Calculate percent within each region
aes(ChurnID, n, fill=Contract)) +
geom_bar(stat="identity") +
geom_text(aes(label=paste0(sprintf("%1.1f", pct*100),"%")),
position=position_stack(vjust=0.5))
colnames(data) <- gsub(" ","",colnames(data))
aux <- distinct(data, ChurnReason)
colnames(data) <- gsub(" ","",colnames(data))
aux <- distinct(data, ChurnReason)
aux$ChurnID <- seq.int(nrow(aux))
aux <- aux[aux$ChurnID < 21, ]
data <- left_join(data, aux, by = "ChurnReason")
churns <- data[data$ChurnID < 21, ]
churns <- churns[!is.na(churns$Gender),]
churns <- churns[!is.na(churns$Contract),]
data2 <- data.frame(churns$ChurnID,churns$Contract,churns$ChurnID)
ggplot(churns, aes(fill=Gender, y=ChurnID, x=ChurnID)) +
geom_bar(position="stack", stat="identity")
ggplot(churns %>% count(ChurnID, Contract) %>%    # Group by region and species, then count number in each group
mutate(pct=n/sum(n)),              # Calculate percent within each region
aes(ChurnID, n, fill=Contract)) +
geom_bar(stat="identity") +
geom_text(aes(label=paste0(sprintf("%1.1f", pct*100),"%")),
position=position_stack(vjust=0.5))
